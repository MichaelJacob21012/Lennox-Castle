#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "Lennox\ Castle"\ application.\ \r\n\ "Lennox\ Castle"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighbouring\ room.\r\n\ \r\n\ @author\ \ Michael\ Jacob\r\n\ @version\ 04/12/2017\r\n
comment1.params=name\ description
comment1.target=Room(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "in\ a\ kitchen"\ or\r\n\ "in\ an\ open\ court\ yard".\r\n\ @param\ name\ The\ room's\ name.\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=item
comment10.target=void\ removeItem(Items)
comment10.text=\r\n\ Remove\ an\ item\ from\ the\ room.\r\n\ @param\ The\ item\ to\ be\ removed.\r\n
comment11.params=itemName
comment11.target=Items\ findInRoom(java.lang.String)
comment11.text=\r\n\ Check\ if\ an\ item\ is\ in\ the\ room.\r\n\ @param\ The\ name\ of\ the\ item\ to\ be\ checked.\r\n\ @return\ The\ item\ if\ found,\ if\ not\ in\ the\ room\ return\ null.\r\n
comment12.params=
comment12.target=void\ listAllItems()
comment12.text=\r\n\ Print\ all\ the\ items\ in\ the\ room;\ name\ and\ description.\r\n
comment13.params=
comment13.target=void\ listBasicItems()
comment13.text=\r\n\ Print\ all\ the\ basic\ items(items\ that\ can\ be\ found\ without\ the\ crystal)\r\n\ in\ the\ room;\ name\ and\ description.\r\n
comment14.params=
comment14.target=boolean\ getCrystalUsed()
comment14.text=\r\n\ Check\ whether\ the\ player\ has\ searched\ in\ this\ room\ with\ the\ crystal.\r\n\ @return\ True\ if\ the\ player\ has\ searched\ in\ this\ room\ with\ the\ crystal.\r\n
comment15.params=beenUsed
comment15.target=void\ setCrystalUsed(boolean)
comment15.text=\r\n\ Set\ whether\ the\ player\ has\ searched\ in\ this\ room\ with\ the\ crystal.\r\n\ @param\ The\ new\ value\ for\ the\ crystalUsed\ boolean.\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Get\ the\ name\ of\ the\ room\r\n\ @return\ The\ name\ of\ the\ room.\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment5.params=direction\ neighbour
comment5.target=void\ setExit(java.lang.String,\ Room)
comment5.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbour\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment6.params=
comment6.target=java.lang.String\ getExitString()
comment6.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment7.params=direction
comment7.target=Room\ getExit(java.lang.String)
comment7.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment8.params=item
comment8.target=void\ addItem(Items)
comment8.text=\r\n\ Add\ an\ item\ to\ the\ room.\r\n\ @param\ The\ item\ to\ be\ added.\r\n
comment9.params=
comment9.target=int\ getNumberOfItems()
comment9.text=\r\n\ Find\ out\ how\ many\ items\ are\ in\ the\ room.\r\n\ @return\ The\ number\ of\ items\ in\ the\ room.\r\n
numComments=16
