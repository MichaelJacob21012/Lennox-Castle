#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Lennox\ Castle"\ application.\ \r\n\ \ "Lennox\ Castle"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ a\ castle,\ pick\ up\ items\ and\ interact\ in\ a\ simple\ way\ with\ characters.\r\n\ \ \r\n\ \ The\ objective\ of\ this\ game\ is\ to\ reach\ the\ treasury\ room\ with\ sufficient\ items\ to\ win.\r\n\ \ There\ are\ three\ varied\ ending\ messages,\ depending\ on\ what\ items\ the\ player\ has.\r\n\ \ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms;\ the\ characters\ and\ the\ items,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Michael\ Jacob\r\n\ @version\ 03/12/2017\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ state.\r\n
comment10.params=command
comment10.target=void\ goRoom(Command)
comment10.text=\ \r\n\ Try\ to\ go\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment11.params=command
comment11.target=void\ goBack(Command)
comment11.text=\ \r\n\ Return\ to\ the\ previous\ room.\r\n
comment12.params=command
comment12.target=void\ goForward(Command)
comment12.text=\ \r\n\ Go\ forward\ to\ rooms\ previously\ visited.\r\n
comment13.params=command
comment13.target=void\ takeItem(Command)
comment13.text=\ \r\n\ Attempt\ to\ pick\ up\ an\ item.\ Display\ the\ appropriate\ error\ message\ if\ unavailable.\r\n
comment14.params=command
comment14.target=void\ dropItem(Command)
comment14.text=\ \r\n\ Remove\ an\ item\ from\ the\ knapsack\ or\ display\ an\ error.\r\n
comment15.params=command
comment15.target=void\ giveItem(Command)
comment15.text=\ \r\n\ Give\ an\ item\ to\ a\ character\ or\ display\ an\ error.\r\n
comment16.params=command
comment16.target=void\ putItem(Command)
comment16.text=\ \r\n\ Stack\ an\ item\ on\ another\ item.\ Finding\ all\ combinations\ allows\ for\ a\ different\ ending.\r\n
comment17.params=command
comment17.target=boolean\ quit(Command)
comment17.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment18.params=
comment18.target=boolean\ processEndGame()
comment18.text=\ \r\n\ Check\ whether\ conditions\ for\ winning\ the\ game\ have\ been\ met.\r\n\ @return\ true\ if\ win\ conditions\ have\ been\ met.\r\n
comment19.params=
comment19.target=void\ win()
comment19.text=\ \r\n\ Prints\ the\ appropriate\ end\ message\r\n
comment2.params=
comment2.target=void\ createGameState()
comment2.text=\r\n\ Sets\ the\ initial\ game\ state\ by\ doing\ the\ following.\r\n\ Creates\ the\ rooms\ and\ furnishes\ them,\ giving\ the\ items\ their\ attributes.\r\n\ Creates\ the\ characters\ and\ positions\ them.\r\n\ Creates\ the\ map\ of\ rooms\ and\ sets\ their\ exits.\r\n\ Start\ the\ player\ in\ the\ 'entrance'\ room.\r\n
comment20.params=
comment20.target=void\ newRoom()
comment20.text=\ \r\n\ The\ player\ enters\ a\ new\ room\ where\ further\ actions\ will\ occur\r\n
comment21.params=
comment21.target=void\ findCharacters()
comment21.text=\ \r\n\ Print\ which\ character\ are\ in\ the\ room\r\n
comment22.params=characterName
comment22.target=Characters\ isCharacter(java.lang.String)
comment22.text=\ \r\n\ Check\ if\ a\ string\ is\ a\ valid\ character.\r\n\ @param\ the\ string\ to\ be\ check\r\n\ @return\ the\ character\ that\ was\ found\r\n
comment23.params=
comment23.target=Room\ randomRoom()
comment23.text=\ \r\n\ Generates\ a\ random\ room\ except\ for\ the\ 'teleporter',\ 'treasury'\ and\ 'dungeons'.\r\n\ @return\ the\ generated\ room.\r\n
comment24.params=
comment24.target=void\ randomMonsterRooms()
comment24.text=\ \r\n\ Puts\ the\ goblin\ and\ skeleton\ in\ random\ rooms\ except\ for\ the\ 'teleporter',\ 'treasury'\ and\ 'dungeons'.\r\n
comment25.params=
comment25.target=boolean\ everybodyHappy()
comment25.text=\ \r\n\ Checks\ whether\ every\ character\ has\ their\ desired\ item.\r\n\ @return\ true\ if\ every\ character\ has\ their\ desired\ item\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command;\ the\ command\ to\ be\ processed.\r\n\ @return\ true\ if\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ a\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words\ with\ a\ description\ of\ the\ command\r\n
comment7.params=command
comment7.target=void\ listKnapsackContents(Command)
comment7.text=\ \r\n\ List\ the\ items\ in\ the\ knapsack.\r\n
comment8.params=command
comment8.target=void\ searchRoom(Command)
comment8.text=\ \r\n\ Search\ the\ contents\ of\ room.\ Displays\ the\ items\ in\ the\ room.\r\n\ To\ display\ all\ items\ the\ 'search\ crystal'\ must\ be\ in\ the\ knapsack.\r\n
comment9.params=command
comment9.target=void\ askCharacter(Command)
comment9.text=\ \r\n\ See\ what\ a\ character\ has\ to\ say\ or\ display\ an\ error.\r\n
numComments=26
